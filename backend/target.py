from bitcoinrpc.authproxy import AuthServiceProxy

def bits_to_target(bits_hex: str) -> int:
    bits = bytes.fromhex(bits_hex)
    exponent = bits[0]
    mantissa = int.from_bytes(bits[1:], 'big')
    return mantissa * (1 << (8 * (exponent - 3)))

def target_to_bits(target: int) -> str:
    exponent = (target.bit_length() + 7) // 8
    mantissa = target >> (8 * (exponent - 3))
    return f"{exponent:02x}{mantissa:06x}"

rpc_user = "bitcoinrpc"
rpc_password = "Lisnevskyi2005!"
rpc_port = 8332  # –î–ª—è mainnet, –¥–ª—è regtest: 18443

rpc_connection = AuthServiceProxy(f"http://{rpc_user}:{rpc_password}@127.0.0.1:{rpc_port}")

latest_block = rpc_connection.getblock(rpc_connection.getbestblockhash())
current_bits = latest_block['bits']
current_target = bits_to_target(current_bits)

#  –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
if current_bits:
    new_bits = current_bits  # –£–ø—Ä–æ—â—ë–Ω–Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    new_target = bits_to_target(new_bits)

    print(" –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Å–ø–µ—à–Ω–æ–≥–æ –±–ª–æ–∫–∞:")
    print(f"  üîπ bits       = {new_bits}")
    print(f"  üîπ target     = {hex(new_target)}")
else:
    print(" –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å 'bits' –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞.")


# RUN IN CMD 
# cd "C:\Program Files\Bitcoin\daemon\"
# .\bitcoind.exe
